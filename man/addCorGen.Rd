% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_correlated_data.R
\name{addCorGen}
\alias{addCorGen}
\title{Create multivariate (correlated) data - for general distributions}
\usage{
addCorGen(
  dtOld,
  nvars,
  idvar = "id",
  rho,
  corstr,
  corMatrix = NULL,
  dist,
  param1,
  param2 = NULL,
  cnames = NULL,
  method = "copula",
  formSpec = NULL,
  periodvar = "period"
)
}
\arguments{
\item{dtOld}{If an existing data.table is specified, then wide will be set to TRUE and n
will be set to the nrow(dt) without any warning or error.}

\item{nvars}{Number of new variables to create for each id.}

\item{idvar}{String variable name of column represents individual level id for correlated
data.}

\item{rho}{Correlation coefficient, -1 <= rho <= 1. Use if corMatrix is not provided.}

\item{corstr}{Correlation structure of the variance-covariance matrix
defined by sigma and rho. Options include "cs" for a compound symmetry structure
and "ar1" for an autoregressive structure.}

\item{corMatrix}{Correlation matrix can be entered directly. It must be symmetrical and
positive semi-definite. It is not a required field; if a matrix is not provided, then a
structure and correlation coefficient rho must be specified.}

\item{dist}{A string indicating "normal", "binary", "poisson" or "gamma".}

\item{param1}{A string that represents the column in dtOld that contains the parameter
for the mean of the distribution. In the case of the uniform distribution the column
specifies the minimum.}

\item{param2}{A string that represents the column in dtOld that contains a possible second
parameter for the distribution. For the normal distribution, this will be the variance;
for the gamma distribution, this will be the dispersion; and for the uniform distribution,
this will be the maximum.}

\item{cnames}{Explicit column names. A single string with names separated
by commas. If no string is provided, the default names will be V#, where #
represents the column.}

\item{method}{Two methods are available to generate correlated data. (1) "copula" uses
the multivariate Gaussian copula method that is applied to all other distributions; this
applies to all available distributions. (2) "ep" uses an algorithm developed by
Emrich and Piedmonte.}

\item{formSpec}{The formula (as a string) that was used to generate the binary
outcome in the `defDataAdd` statement. This is only necessary when method "ep" is
requested.}

\item{periodvar}{A string value that indicates the name of the field that indexes
the repeated measurement for an individual unit. The value defaults to "period".}
}
\value{
Original data.table with added column(s) of correlated data
}
\description{
Create multivariate (correlated) data - for general distributions
}
\examples{
# Wide example

def <- defData(varname = "xbase", formula = 5, variance = .4, dist = "gamma", id = "cid")
def <- defData(def, varname = "lambda", formula = ".5 + .1*xbase", dist = "nonrandom", link = "log")
def <- defData(def, varname = "p", formula = "-2 + .3*xbase", dist = "nonrandom", link = "logit")

dt <- genData(500, def)

dtX1 <- addCorGen(
  dtOld = dt, idvar = "cid", nvars = 3, rho = .7, corstr = "cs",
  dist = "poisson", param1 = "lambda"
)

dtX2 <- addCorGen(
  dtOld = dt, idvar = "cid", nvars = 4, rho = .4, corstr = "ar1",
  dist = "binary", param1 = "p"
)

# Long example

def <- defData(varname = "xbase", formula = 5, variance = .4, dist = "gamma", id = "cid")
def <- defData(def, "nperiods", formula = 3, dist = "noZeroPoisson")

def2 <- defDataAdd(
  varname = "lambda", formula = ".5+.5*period + .1*xbase",
  dist = "nonrandom", link = "log"
)
def2 <- defDataAdd(def2,
  varname = "p", formula = "-3+.2*period + .3*xbase",
  dist = "nonrandom", link = "logit"
)
def2 <- defDataAdd(def2,
  varname = "gammaMu", formula = ".2*period + .3*xbase",
  dist = "nonrandom", link = "log"
)
def2 <- defDataAdd(def2, varname = "gammaDis",
                   formula = 1, dist = "nonrandom")
def2 <- defDataAdd(def2, varname = "normMu",
                   formula = "5+period + .5*xbase", dist = "nonrandom")
def2 <- defDataAdd(def2, varname = "normVar", formula = 4,
                   dist = "nonrandom")
def2 <- defDataAdd(def2, varname = "unifMin",
                   formula = "5 + 2*period + .2*xbase", dist = "nonrandom")
def2 <- defDataAdd(def2, varname = "unifMax",
                   formula = "unifMin + 20", dist = "nonrandom")

dt <- genData(1000, def)

dtLong <- addPeriods(dt, idvars = "cid", nPeriods = 3)
dtLong <- addColumns(def2, dtLong)

# Poisson distribution

dtX3 <- addCorGen(
  dtOld = dtLong, idvar = "cid", nvars = 3, rho = .6, corstr = "cs",
  dist = "poisson", param1 = "lambda", cnames = "NewPois"
)
dtX3

# Binomial distribution - copula method

dtX4 <- addCorGen(
  dtOld = dtLong, idvar = "cid", nvars = 3, rho = .6, corstr = "cs",
  dist = "binary", param1 = "p", cnames = "NewBin"
)

dtX4

# Gamma distribution

dtX6 <- addCorGen(
  dtOld = dtLong, idvar = "cid", nvars = 3, rho = .6, corstr = "ar1",
  dist = "gamma", param1 = "gammaMu", param2 = "gammaDis",
  cnames = "NewGamma"
)

dtX6

# Normal distribution

dtX7 <- addCorGen(
  dtOld = dtLong, idvar = "cid", nvars = 3, rho = .6, corstr = "ar1",
  dist = "normal", param1 = "normMu", param2 = "normVar",
  cnames = "NewNorm"
)

# Binary outcome - ep method

probform <- "-2 + .3*period"

def1 <- defDataAdd(
  varname = "p", formula = probform,
  dist = "nonrandom", link = "logit"
)

dx <- genData(100)
dx <- addPeriods(dx, nPeriods = 4)
dx <- addColumns(def1, dx)

dg <- addCorGen(dx,
  nvars = 4,
  corMatrix = NULL, rho = .3, corstr = "cs",
  dist = "binary", param1 = "p",
  method = "ep", formSpec = probform,
  periodvar = "period"
)
}
\concept{correlated}
