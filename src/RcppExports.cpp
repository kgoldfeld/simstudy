// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// matMultinom
Rcpp::IntegerVector matMultinom(Rcpp::NumericMatrix probmatrix);
RcppExport SEXP _simstudy_matMultinom(SEXP probmatrixSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type probmatrix(probmatrixSEXP);
    rcpp_result_gen = Rcpp::wrap(matMultinom(probmatrix));
    return rcpp_result_gen;
END_RCPP
}
// markovChains
Rcpp::IntegerMatrix markovChains(int nchains, NumericMatrix P, int chainLen, IntegerVector state0);
RcppExport SEXP _simstudy_markovChains(SEXP nchainsSEXP, SEXP PSEXP, SEXP chainLenSEXP, SEXP state0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type nchains(nchainsSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type P(PSEXP);
    Rcpp::traits::input_parameter< int >::type chainLen(chainLenSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type state0(state0SEXP);
    rcpp_result_gen = Rcpp::wrap(markovChains(nchains, P, chainLen, state0));
    return rcpp_result_gen;
END_RCPP
}
// clipVec
Rcpp::IntegerVector clipVec(IntegerVector id, IntegerVector seq, IntegerVector event);
RcppExport SEXP _simstudy_clipVec(SEXP idSEXP, SEXP seqSEXP, SEXP eventSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type id(idSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type seq(seqSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type event(eventSEXP);
    rcpp_result_gen = Rcpp::wrap(clipVec(id, seq, event));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_simstudy_matMultinom", (DL_FUNC) &_simstudy_matMultinom, 1},
    {"_simstudy_markovChains", (DL_FUNC) &_simstudy_markovChains, 4},
    {"_simstudy_clipVec", (DL_FUNC) &_simstudy_clipVec, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_simstudy(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
